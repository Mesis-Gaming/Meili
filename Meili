local workspace = game.Workspace
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Global toggle
getgenv().IsEnabled = true -- Default to enabled
getgenv().SilentEnabled = true -- Silent aim
getgenv().PlayersVelocity = nil

Config = {
    Manipulation = {
        Enabled = true, -- Default enabled
        Angles = 1, -- Default to 1
        Radius = 6, -- Default to 6
        Direction = "Normal",
        Vector = Vector3.new(0, 0, 0)
    }
}

local FOVCircle = Drawing.new("Circle")
FOVCircle.Visible = true -- Default enabled
FOVCircle.Color = Color3.fromRGB(45, 116, 202)
FOVCircle.Thickness = 1.5
FOVCircle.Radius = 30 -- Default size

local Line = Drawing.new("Line")
Line.Visible = true -- Default enabled
Line.Color = Color3.fromRGB(255, 255, 255)
Line.Thickness = 1.5

-- Toggle function
local function toggleEnabled()
    getgenv().IsEnabled = not getgenv().IsEnabled
    getgenv().SilentEnabled = getgenv().IsEnabled
    FOVCircle.Visible = getgenv().IsEnabled
    Line.Visible = getgenv().IsEnabled
    print("Silent Aim: " .. (getgenv().IsEnabled and "Enabled" or "Disabled"))
end

-- Detect key press
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if isProcessed then return end
    if input.KeyCode == Enum.KeyCode.J then
        toggleEnabled()
    end
end)

local function GetPlayer()
    local closest, playerTable = nil, nil
    local closestMagnitude = math.huge

    for _, v in pairs(workspace:GetChildren()) do
        if v:FindFirstChild("Head") and v:IsA("Model") then
            local PartPos, OnScreen = workspace.CurrentCamera:WorldToViewportPoint(v:GetPivot().Position)
            local Magnitude = (Vector2.new(PartPos.X, PartPos.Y) - Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y / 2)).Magnitude
            local PlayerDistance = (workspace.Ignore.LocalCharacter.Middle:GetPivot().Position - v:GetPivot().Position).Magnitude

            if Magnitude < FOVCircle.Radius and PlayerDistance <= 9999 and Magnitude < closestMagnitude and OnScreen then
                closestMagnitude = Magnitude
                closest = v
                playerTable = v
            end
        end
    end
    return closest, playerTable
end

local function updateSnapline()
    if not getgenv().IsEnabled then
        Line.Visible = false
        return
    end

    local Target, playerData = GetPlayer()
    if Target and Target:FindFirstChild("Head") then
        local headPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(Target.Head.Position)
        Line.Visible = onScreen

        if onScreen then
            Line.To = Vector2.new(headPos.X, headPos.Y)
            getgenv().PlayersVelocity = Vector3.new(0, 0, 0)
        else
            getgenv().PlayersVelocity = nil
        end
    else
        Line.Visible = false
        getgenv().PlayersVelocity = nil
    end
end

RunService.RenderStepped:Connect(function()
    if getgenv().IsEnabled then
        updateSnapline()
    end
end)

print("Silent Aim loaded. Press 'J' to toggle.")
